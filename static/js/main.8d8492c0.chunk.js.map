{"version":3,"sources":["components/SearchBox.js","components/Card.js","components/CardList.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["SearchBox","searchfield","searchChange","className","type","placeholder","onChange","Card","name","email","id","src","alt","CardList","robots","map","user","i","Scroll","props","style","overflowY","border","borderRadius","height","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","robot","toLocaleLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAUeA,EARG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAC9B,OACI,qBAAKC,UAAU,MAAf,SACI,uBAAOA,UAAU,mCAAmCC,KAAK,SAASC,YAAY,UAAUC,SAAUJ,OCU/FK,G,MAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GACzB,OACI,sBAAKP,UAAU,4CAAf,UACI,qBAAKQ,IAAG,+BAA0BD,GAAME,IAAI,iBAC5C,gCACI,6BAAKJ,IACL,4BAAIC,YCcLI,EAnBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACI,8BAEQA,EAAOC,KAAI,SAACC,EAAMC,GAClB,OACI,cAAC,EAAD,CAEIP,GAAII,EAAOG,GAAGP,GACdF,KAAMM,EAAOG,GAAGT,KAChBC,MAAOK,EAAOG,GAAGR,OAHZQ,SCAdC,EATA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAAEC,UAAU,SAAUC,OAAO,4BAA4BC,aAAa,MAAOC,OAAO,SAAhG,SACKL,EAAMM,YC0CJC,G,wDAvCX,aAAe,IAAD,8BACV,gBAcJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAAE5B,YAAa2B,EAAME,OAAOC,SAd1C,EAAKC,MAAQ,CACTlB,OAAS,GACTb,YAAc,IAJR,E,qDAQd,WAAqB,IAAD,OAChBgC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKR,SAAS,CAAEf,OAAQuB,S,oBAQ3C,WACI,MAAgCC,KAAKN,MAA7BlB,EAAR,EAAQA,OAAQb,EAAhB,EAAgBA,YACVsC,EAAiBzB,EAAO0B,QAAO,SAAAC,GACjC,OAAOA,EAAMjC,KAAKkC,oBAAoBC,SAAS1C,EAAYyC,wBAE/D,OAAQ5B,EAAO8B,OAIP,sBAAKzC,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWD,aAAcoC,KAAKX,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,CAAUb,OAAQyB,SAP9B,oBAAIpC,UAAU,SAAd,gC,GA1BM0C,cCKHC,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.8d8492c0.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input className='pa3 ba b--green bg-lightest-blue' type='search' placeholder='@robots' onChange={searchChange}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox;\r\n","import React from 'react';\r\nimport './Card.css'\r\n\r\nconst Card = ({ name, email, id }) => {\r\n    return (\r\n        <div className=\"card tc dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n            <img src={`https://robohash.org/${id}`} alt=\"Robots photo\"/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './Card';\r\n\r\n\r\nconst CardList = ({ robots }) => {\r\n    return (\r\n        <div>\r\n            {\r\n                robots.map((user, i) => {\r\n                return (\r\n                    <Card\r\n                        key={i}\r\n                        id={robots[i].id}\r\n                        name={robots[i].name}\r\n                        email={robots[i].email}\r\n                    />\r\n                    );  \r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;\r\n","import React from 'react'\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{ overflowY:'scroll', border:'5px solid rgba(0,0,0,.15)',borderRadius:'5px', height:'500px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Scroll;\r\n","import React, { Component } from 'react';\r\nimport SearchBox from '../components/SearchBox';\r\nimport CardList from '../components/CardList';\r\nimport Scroll from '../components/Scroll'\r\nimport './App.css'\r\n\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            robots : [],\r\n            searchfield : ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())\r\n        .then(users => this.setState({ robots: users}))\r\n    }\r\n\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield: event.target.value})\r\n    }\r\n\r\n    render() {\r\n        const { robots, searchfield } = this.state;\r\n        const filteredRobots = robots.filter(robot => {\r\n            return robot.name.toLocaleLowerCase().includes(searchfield.toLocaleLowerCase())\r\n        })\r\n        return !robots.length ?\r\n            <h1 className='tc red'>Loading.......</h1>\r\n            :\r\n            (\r\n                <div className='tc'>\r\n                    <h1 className='f1'>RoboFriends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange}/>\r\n                    <Scroll>\r\n                        <CardList robots={filteredRobots}/>\r\n                    </Scroll>\r\n                </div>\r\n            );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport 'tachyons';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}